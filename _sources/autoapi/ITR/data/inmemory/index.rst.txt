:py:mod:`ITR.data.inmemory`
===========================

.. py:module:: ITR.data.inmemory


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ITR.data.inmemory.InMemoryProvider




Attributes
~~~~~~~~~~

.. autoapisummary::

   ITR.data.inmemory.class_definitions


.. py:data:: class_definitions
   

   

.. py:class:: InMemoryProvider(fundamental: class_definitions[InMemoryProvider.__init__.fundamental], targets: class_definitions[target], config: Type[ITR.configs.ColumnsConfig] = ColumnsConfig)

   Bases: :py:obj:`ITR.data.data_provider.DataProvider`

   Data provider to read in-memory dict.

   :param fundamental: A dictionary with the fundamental data
   :param targets: A dictionary with the target data

   .. py:method:: get_targets(self, company_ids: list) -> List[ITR.interfaces.IDataProviderTarget]

      Get all relevant targets for a list of company ids (ISIN). This method should return a list of
      IDataProviderTarget instances.

      :param company_ids: A list of company IDs (ISINs)
      :return: A list containing the targets


   .. py:method:: _target_df_to_model(self, df_targets)

      transforms target Dataframe into list of IDataProviderTarget instances

      :param df_targets: pandas Dataframe with targets
      :return: A list containing the targets


   .. py:method:: get_company_data(self, company_ids: list) -> List[ITR.interfaces.IDataProviderCompany]

      Get all relevant data for a list of company ids (ISIN). This method should return a list of IDataProviderCompany
      instances.

      :param company_ids: A list of company IDs (ISINs)
      :return: A list containing the company data


   .. py:method:: get_sbti_targets(self, companies: list) -> list

      For each of the companies, get the status of their target (Target set, Committed or No target) as it's known to
      the SBTi.

      :param companies: A list of companies. Each company should be a dict with a "company_name" and "company_id"
                          field.
      :return: The original list, enriched with a field called "sbti_target_status"



